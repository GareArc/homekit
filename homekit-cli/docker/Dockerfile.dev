# syntax=docker/dockerfile:1.7
FROM ubuntu:24.04

ENV DEBIAN_FRONTEND=noninteractive
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# base packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates curl wget gnupg git xz-utils unzip pkg-config \
    build-essential bash-completion \
 && rm -rf /var/lib/apt/lists/*

# install gh
RUN (type -p wget >/dev/null || (apt update && apt install wget -y)) \
&& mkdir -p -m 755 /etc/apt/keyrings \
&& out=$(mktemp) && wget -nv -O$out https://cli.github.com/packages/githubcli-archive-keyring.gpg \
&& cat $out | tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
&& chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
&& mkdir -p -m 755 /etc/apt/sources.list.d \
&& echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
&& apt update \
&& apt install gh -y

# install go
ARG GO_VERSION=1.23.2
RUN arch=$(dpkg --print-architecture) \
 && curl -fsSL https://go.dev/dl/go${GO_VERSION}.linux-${arch}.tar.gz -o /tmp/go.tgz \
 && rm -rf /usr/local/go && tar -C /usr/local -xzf /tmp/go.tgz \
 && rm /tmp/go.tgz
ENV GOPATH=/go
ENV PATH=/usr/local/go/bin:/go/bin:$PATH
RUN mkdir -p "$GOPATH"

# install golangci-lint
RUN go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

WORKDIR /work
CMD ["bash"]
